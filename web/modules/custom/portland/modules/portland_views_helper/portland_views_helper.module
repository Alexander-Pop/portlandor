<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function portland_views_helper_form_views_exposed_form_alter(&$form, &$form_state) {

  // POWR-904 // display relative default dates as default absolute dates in exposed filters.
  // POWR-854 // filter identifier might be different than filter name (arg name in querystring). if so, use that field name instead.
  _portland_views_helper_convert_relative_dates($form, $form_state);

  // POWR-854 // Create prev and next month links for events views using args from exposed filters
  _portland_views_helper_insert_prev_next_month_links($form, $form_state);
}

function _portland_views_helper_convert_relative_dates(&$form, &$form_state) {  
  foreach ($form['#info'] as $filter) {
    if (isset($filter['value'])) {
      $identifier = $filter['value'];
      // determine whether the field has min/max and is set up as datepicker
      $is_min_datepicker = isset($form[$identifier]['min']['#attributes']['data-provide']) && $form[$identifier]['min']['#attributes']['data-provide'] == 'datepicker';
      $is_max_datepicker = isset($form[$identifier]['max']['#attributes']['data-provide']) && $form[$identifier]['max']['#attributes']['data-provide'] == 'datepicker';

      // if min or max has datepicker, convert relative dates to actual dates
      if ($is_min_datepicker) {
        $min_rel_date = $form[$identifier]['min']['#default_value'];
        if ($min_rel_date) {
          $min_date = new DateTime($min_rel_date);
          $form[$identifier]['min']['#default_value'] = date_format($min_date, 'm/d/Y');
        }
      }
      if ($is_max_datepicker) {
        $max_rel_date = $form[$identifier]['max']['#default_value'];
        if ($max_rel_date) {
          $max_date = new DateTime($max_rel_date);
          $form[$identifier]['max']['#default_value'] = date_format($max_date, 'm/d/Y');
        }
      }
    }
  }
}

function _portland_views_helper_insert_prev_next_month_links(&$form, &$form_state) {
  $identifier = 'start_date'; // no good way to make this abstract, have to hard code this exposed filter identifier
  if (isset($_GET[$identifier]) || isset($form[$identifier])) {
    $min = isset($_GET[$identifier]['min']) ? $_GET[$identifier]['min'] : $form[$identifier]['min']['#default_value'];
    $max = isset($_GET[$identifier]['max']) ? $_GET[$identifier]['max'] : $form[$identifier]['max']['#default_value'];
    $prev_url = "";
    $next_url = "";
    $links = "";

    if (isset($min) || isset($max)) {
      if (isset($min)) {
        $min_date = new DateTime($min);
        date_modify($min_date,"-1 month");
        $prev_date = date_format($min_date,"m/d/Y");
        $min = urlencode($min);
        $prev_date = urlencode($prev_date);
        // qstr format: ?start_date%5Bmin%5D=05%2F13%2F2019&start_date%5Bmax%5D=06%2F12%2F2019
        $prev_url = "?$identifier%5Bmin%5D=$prev_date&$identifier%5Bmax%5D=$min";
      }

      if (isset($max)) {
        $max_date = new DateTime($max);
        date_modify($max_date,"+1 month");
        $next_date = date_format($max_date,"m/d/Y");
        $max = urlencode($max);
        $next_date = urlencode($next_date);
        // qstr format: ?start_date%5Bmin%5D=05%2F13%2F2019&start_date%5Bmax%5D=06%2F12%2F2019
        $next_url = "?$identifier%5Bmin%5D=$max&$identifier%5Bmax%5D=$next_date";
      }
    }

    if (isset($prev_url) || isset($next_url)) {
      if (isset($prev_url)) {
        $links = "$links<span class=\"prev-link\"><a href=\"$prev_url\"><i class=\"fas fa-caret-left\"></i>Previous month</a></span>";
      }
      if (isset($next_url)) {
        $links = "$links<span class=\"next-link\"><a href=\"$next_url\">Next month<i class=\"fas fa-caret-right\"></i></a></span>";
      }
      $links = "<div class=\"date-links\">$links</div>";
      $form['text']['#markup'] = $links;
      $form['text']['#weight'] = 1000;
    }
  }
}
