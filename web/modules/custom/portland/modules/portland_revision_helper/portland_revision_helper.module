<?php

/**
 * Implements hook_form_alter().
 */
function portland_revision_helper_form_alter(&$form, $form_state, $form_id)
{
  if (array_key_exists('revision_log',$form) && array_key_exists('revision', $form) && array_key_exists('field_revision_log_message', $form)) {
    // hide revision checkbox and log message field; we're using a custom field for log message,
    // so it can be required and adopts the same permissions as any other field
    $form['revision_log']['#access'] = false;
    $form['revision']['#access'] = false;
    // move temp log message field into footer group, so that it's closest to the submit button
    $form['field_revision_log_message']['#group'] = 'footer';

    // add submit handler to manually insert revision log message
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'portland_revision_helper_handle_log_message';
      }
    }
  }
}

/**
 * Submit handler for any entity with a revision log and custom revision log message field
 */
function portland_revision_helper_handle_log_message(&$form, $form_state)
{
  $test = $form;
  $message = $form_state->getValue('field_revision_log_message');
  $entity = $form_state->getFormObject()->getEntity();
  $entity->setRevisionLogMessage($message);
  $entity->save();
}

/**
 * Implements hook_local_tasks_alter().
 */
function portland_revision_helper_local_tasks_alter(&$local_tasks) {
  // Move "View Revision" task right after Revisions (20)
  $local_tasks['entity.node.revision']['weight'] = 30;
}
