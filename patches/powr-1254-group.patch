diff --git a/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php b/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php
index ecc1a91..b67b1c6 100644
--- a/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php
+++ b/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php
@@ -16,7 +16,7 @@ class GroupNodeDeriver extends DeriverBase {
 
       $this->derivatives[$name] = [
         'entity_bundle' => $name,
-        'label' => t('Group node (@type)', ['@type' => $label]),
+        'label' => t('Add @type', ['@type' => $label]),
         'description' => t('Adds %type content to groups both publicly and privately.', ['%type' => $label]),
       ] + $base_plugin_definition;
     }
diff --git a/src/Entity/Controller/GroupContentController.php b/src/Entity/Controller/GroupContentController.php
index fbe48f6..069215c 100644
--- a/src/Entity/Controller/GroupContentController.php
+++ b/src/Entity/Controller/GroupContentController.php
@@ -15,6 +15,8 @@ use Drupal\group\Entity\GroupInterface;
 use Drupal\user\PrivateTempStoreFactory;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\node\Entity\NodeType;
+use Drupal\media\Entity\MediaType;
 
 /**
  * Returns responses for GroupContent routes.
@@ -251,8 +253,18 @@ class GroupContentController extends ControllerBase {
   public function addFormTitle(GroupInterface $group, $plugin_id) {
     /** @var \Drupal\group\Plugin\GroupContentEnablerInterface $plugin */
     $plugin = $group->getGroupType()->getContentPlugin($plugin_id);
-    $group_content_type = GroupContentType::load($plugin->getContentTypeConfigId());
-    return $this->t('Add @name', ['@name' => $group_content_type->label()]);
+    $entity_type = $plugin->getEntityTypeId();
+    switch ($entity_type) {
+      case "media":
+        $content_type = MediaType::load($plugin->getEntityBundle());
+        break;
+      case "node":
+        $content_type = NodeType::load($plugin->getEntityBundle());
+        break;
+      default:
+        $content_type = "undefined";
+    }
+    return $this->t('Create @name in @group', ['@name' => $content_type->label(), '@group' => $group->label()]);
   }
 
   /**
