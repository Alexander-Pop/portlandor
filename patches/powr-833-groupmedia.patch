diff --git a/src/Controller/GroupMediaController.php b/src/Controller/GroupMediaController.php
index 5fffbb6..66820d5 100644
--- a/src/Controller/GroupMediaController.php
+++ b/src/Controller/GroupMediaController.php
@@ -10,6 +10,7 @@ use Drupal\group\Entity\GroupInterface;
 use Drupal\group\Plugin\GroupContentEnablerManagerInterface;
 use Drupal\user\PrivateTempStoreFactory;
 use Symfony\Component\DependencyInjection\ContainerInterface;
+use Drupal\media\Entity\MediaType;
 
 /**
  * Returns responses for 'group_media' GroupContent routes.
@@ -68,15 +69,14 @@ class GroupMediaController extends GroupContentController {
 
     // Overwrite the label and description for all of the displayed bundles.
     $storage_handler = $this->entityTypeManager->getStorage('media_type');
+    $media_types = MediaType::loadMultiple();
     foreach ($this->addPageBundles($group, $create_mode) as $plugin_id => $bundle_name) {
       if (!empty($build['#bundles'][$bundle_name])) {
         $plugin = $group->getGroupType()->getContentPlugin($plugin_id);
         $bundle_label = $storage_handler->load($plugin->getEntityBundle())->label();
 
         $t_args = ['%media_type' => $bundle_label];
-        $description = $create_mode
-          ? $this->t('Create a media of type %media_type in the group.', $t_args)
-          : $this->t('Add an existing media of type %media_type to the group.', $t_args);
+        $description = $media_types[$plugin->getEntityBundle()]->getDescription();
 
         $build['#bundles'][$bundle_name]['label'] = $bundle_label;
         $build['#bundles'][$bundle_name]['description'] = $description;
diff --git a/src/Plugin/GroupContentEnabler/GroupMediaDeriver.php b/src/Plugin/GroupContentEnabler/GroupMediaDeriver.php
index 7d02f56..6f92885 100644
--- a/src/Plugin/GroupContentEnabler/GroupMediaDeriver.php
+++ b/src/Plugin/GroupContentEnabler/GroupMediaDeriver.php
@@ -21,7 +21,7 @@ class GroupMediaDeriver extends DeriverBase {
 
       $this->derivatives[$name] = [
         'entity_bundle' => $name,
-        'label' => t('Group media (@type)', ['@type' => $label]),
+        'label' => t('Add @type', ['@type' => $label]),
         'description' => t('Adds %type content to groups both publicly and privately.', ['%type' => $label]),
       ] + $base_plugin_definition;
     }
